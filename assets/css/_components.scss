/* --- Shared components --- */

%btn-base{display:inline-flex;flex-direction:row;align-items:center;justify-content:center;}

/* Icon helper reused by multiple buttons */
.btn-icon{
  height:1.4em;
  width:1.4em;
  font-size:1.4em;

  /* Layout */
  flex-shrink:0;
  display:inline-block;
  vertical-align:middle;
  margin-right:.5em;

  /* Render quality */
  object-fit:contain;
  box-shadow:none !important;
  filter:none !important;
}
.tab-switcher {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  flex-direction: column;
  justify-content: flex-start;
}

.tab-switcher input[type="radio"] {
  display: none;
}

.tab-btn-row{
  display:grid;
  grid-auto-flow:column;   /* place children left→right        */
  grid-auto-columns:1fr;   /* every child gets 1 fraction unit */
  gap:.5rem;
  width:100%;
}

.tab-btn {
   @extend %btn-base;
  padding: 0.6em 2.2em;
  border-radius: 2em;
  font-size: 0.8em;
  font-weight: 700;
  cursor: pointer;
  background: var(--btn-disabled-bg);
  color: var(--btn-text);
  transition: background 0.15s, color 0.15s, border-color 0.15s;
  margin-bottom: 1em;
  box-shadow: 0 1px 4px rgba(0,0,0,0.15);
  justify-content: center;

  display:inline-flex;      /* flex, but on a single line */
  flex-direction:row;       /* default, but explicit */
  align-items:center;       /* vertical-centre img + text */
}

.tab-content {
  width: 100%;
}

input#tab-desc:checked + label[for="tab-desc"],
input#tab-code:checked + label[for="tab-code"],
input#tab-edit:checked + label[for="tab-edit"],
input#tab-preview:checked + label[for="tab-preview"],
#tab-desc:checked ~ label[for="tab-desc"],
#tab-code:checked ~ label[for="tab-code"],
#tab-edit:checked ~ label[for="tab-edit"],
#tab-preview:checked ~ label[for="tab-preview"]{
  background: var(--accent);
  color: white;
}

#editor .cm-editor-view {
  border: none; /* 1px solid var(--accent);*/
  border-radius: 4px;
  margin: 1em 0;
  font-size: 1em;
}

#editor:focus {
  outline: none;
}

.cm-editor:focus, .cm-editor.cm-focused {
  outline: none !important;
  box-shadow: none !important;
  border-radius: 4px;
  /* border-color: var(--accent); */ /* keep your border color */
}

.cm-static-view {
  border: 1px solid var(--accent-disabled);
  border-radius: 8px;
  margin: 0;
  padding: .5em;
  overflow: auto;
  background: var(--surface);
}

.code-runner {
  display: flex;
  flex-direction: column;
  gap: 1em;
  margin-top: 1.5em;
}

/* Layout for input row: glue button to right, textarea grows */
.input-row {
  display: flex;
  align-items: flex-start; /* button glued to top of input */
  gap: 0.5em;
}

#code-input {
  resize: vertical;
  width: 100%;
  min-height: 2.5em;
  flex: auto;
  background: var(--surface);
  color: var(--text);
}

/* The button: size, alignment, spacing */
.run-btn {
  @extend %btn-base;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 2em;
  width: 2em;
  min-height: 2em;
  min-width: 2em;
  border-radius: 30%;
  padding: 0;
  background: var(--accent);
  color: var(--btn-text);
  border: none;
  cursor: pointer;
  font-size: 1.4em;
  margin: 0;
}

@keyframes spin {
  0% { transform: rotate(0deg);}
  100% { transform: rotate(360deg);}
}

.tab-panel{
  /* kill any inset accidentally coming from elsewhere */
  padding-left: 0 !important;
  margin-left:  0 !important;
  border-left:  0 !important;

  /* keep them full-width so flex/grid parents don’t shrink them */
  width: 100%;
  box-sizing: border-box;
  display: none;
}
.tab-panel.active {
  display: block;
}

/* all disabled form controls – including the int-wrapper’s <input> */
input:disabled,
textarea:disabled,
select:disabled,
.input-wrapper input:disabled,
.bool-toggle:disabled{
  border-color: var(--accent-disabled) !important;
  color: var(--text-muted)           !important;
  opacity: .65;                      /* subtle transparency   */
  cursor: not-allowed;
}

/* if the stepper is present and its input becomes disabled */
.input-wrapper input:disabled + .stepper{
  border-left: 1px solid var(--accent-disabled);
  cursor: not-allowed;
  opacity: .65;
}

/* --- Global pretty checkbox --- */

input[type="checkbox"]{
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;

  width:1em;
  height:1em;
  display:inline-block;
  margin:0 0.2em 0 0;
  padding: 0;
  gap: 0;

  vertical-align: middle;

  cursor:pointer;
  border:1px solid var(--accent);
  border-radius:4px;
  background:var(--surface);
  transition:background .15s, border-color .15s;
}

input[type="checkbox"]:checked{
  background:var(--accent);
  border-color:var(--accent);
  background-image:
    url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' \
viewBox='0 0 24 24'%3E%3Cpath fill='%23ffffff' \
d='M9 16.17 4.83 12 3.41 13.41 9 19 21 7 19.59 5.59z'/%3E%3C/svg%3E");
  background-repeat:no-repeat;
  background-position:center;
  background-size:0.7em;
}

input[type="checkbox"]:focus-visible{
  outline:2px solid var(--accent);
  outline-offset:2px;
}


/* Hide code blocks intended for CodeMirror until hydrated */
pre code.language-python-codemirror,
pre code.language-io-codemirror {
  display: none;
}
.cm-static-view {
  display: block;
}

.contribute-btn {
  @extend %btn-base;
  margin: .3em 0;
  background: var(--surface);
  border: 1px solid var(--accent);
  color: var(--accent);
  border-radius: 2em;
  cursor: pointer;

  display:inline-flex;      /* flex, but on a single line */
  flex-direction:row;       /* default, but explicit */
  align-items:center;       /* vertical-centre img + text */
  justify-content: center;
  padding:.45em 1.1em;
}

.available-tasks-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;    /* bottom‐align each item */
}

/* nuke default bottom‐margins so they don’t “sit” at different heights */
.available-tasks-header h2,
.available-tasks-header button {
  margin: 0;
}

/* Edit button shown on task pages */
.edit-task-btn {
  @extend %btn-base;
  background: transparent;
  border: none;
  color: var(--accent);
  cursor: pointer;
  line-height: 1;
  padding: 0.2em;
  display: flex;
  align-items: center;
  font-size: 0.85em;  /* ~15% smaller than default */
}

/* Container for task title and edit button */
.task-header {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}
/* sync the default margins so both bottoms actually meet */
.task-header .task-title,
.task-header .edit-task-btn {
  margin: 0.5em;
}

.task-header .edit-task-btn {
  position: absolute;
  top: 50%;
  right: 0;
  transform: translateY(-50%);
}

/* Form for new task information submission */

/* header row inside the modal card */
.modal-header {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  margin-bottom: 1.2em;         /* keep existing spacing to form */
}

/* “X” button */
.modal-close {
  background: none;
  border: none;
  line-height: 1;
  cursor: pointer;
  color: var(--accent);
  font-size: 1.5rem;
}
.modal-close:hover,
.modal-close:focus-visible {
  opacity: .8;                  /* subtle feedback */
}

/* Hide the modal by default … */
.contribute-modal {
  position: fixed;
  inset: 0;
  z-index: 10000;

  background:var(--glass-overlay-clr);
  backdrop-filter:blur(var(--glass-blur)) brightness(var(--glass-dim));

  display: flex;
  align-items: center;     /* vertical */
  justify-content: center; /* horizontal */

  overflow-y: auto;
  /*  hide it until we add .open in JS */
  visibility: hidden;
  opacity: 0;
  transition: opacity .15s;
}

/* …and show it when we need it */
.contribute-modal.open {
  visibility: visible;
  opacity: 1;
}

/* The card itself */
.modal-content {
  position: relative;
  background: var(--bg);
  color: var(--text);
  padding: 1.2em 1.2em;
  border-radius: 16px;
  box-shadow: 0 8px 24px rgba(20, 20, 30, 0.15);

  width: 600px;
  box-sizing: border-box;

  margin: 1.2em 1.2em;           /* breathing room on small screens */
  max-height: 90vh;
  overflow-y: auto;

  scrollbar-width:thin;                /* ≈ 8 px */
  /* thumb 40 % accent / transparent track */
  scrollbar-color: color-mix(in srgb, var(--btn-disabled-bg) 70%, transparent) transparent;
}

@media (max-width: 600px) {
  .modal-content {
    font-size: 1em;
    border-radius: 10px;

    /* still fill most of a small screen */
    width: 94vw;
    max-width: none;
  }
}

/* Chrome / Edge / Safari  */
.modal-content::-webkit-scrollbar{
  width:8px;                           /* slim bar */
}
.modal-content::-webkit-scrollbar-track{
  background:transparent;              /* no visual rail */
}
.modal-content::-webkit-scrollbar-thumb{
  /* 40 %-opaque accent                            */
  background:color-mix(in srgb, var(--btn-disabled-bg) 70%, transparent);
  border-radius:6px;
  border:2px solid transparent;        /* keeps thumb off the edge */
  background-clip:content-box;
}
.modal-content::-webkit-scrollbar-thumb:hover{
  /* solid accent on hover for better grab */
  background:var(--accent);
}

/* --- Form inputs and helper text --- */
.form-field{
  display:flex;
  flex-direction:column;
  gap:.35em;             /* space between label / control / hint */
  margin-bottom:1rem;
}

.form-field label{
  font-weight:600;
  font-size:.9rem;
  color:var(--text);
}

/* the controls */
input,
textarea{
  background:var(--surface);
  border:1px solid var(--accent);
  border-radius:8px;
  padding:.55em .9em;
  font:inherit;
  color:var(--text);
  transition:border-color .15s, box-shadow .15s;
  box-sizing:border-box;
}

/* helper / hint text */
.hint{
  font-size:.78rem;
  color:var(--text-muted);
  line-height:1.4;
}

.input-wrapper-float{
  box-sizing:border-box;
  display:flex;             /* new – puts stepper in flow        */
  width:auto;               /* shrink-wrap to content            */
}


/* --- Custom int input wrapper --- */

.input-wrapper{
  box-sizing:border-box;
  display:flex;             /* new – puts stepper in flow        */
  width:auto;               /* shrink-wrap to content            */
}

/* text box */
.input-wrapper input{
  flex:1 1 auto;             /* fill remaining width         */
  border-right:0;            /* merge border with stepper    */
  border-radius:8px 0 0 8px; /* round only left corners      */
  padding-right:.9em;        /* normal inner padding         */
}

.test-item .input-wrapper > input{
  flex:1 1 auto;
  border-right: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}


/* stepper block */
.stepper{
  position:static;
  width:2.6em;
  display:flex;
  flex-direction:column;
  border:1px solid var(--accent);
  border-radius:0 8px 8px 0; /* round right corners          */
  overflow:hidden;           /* clip inner divider corners   */
}

/* buttons */
.stepper .step{
  flex:1 1 50%;
  display:flex;
  justify-content:center;
  align-items:center;
  font-size:.85rem;
  line-height:1;
  background:var(--surface);
  color:var(--text);
  border:0;
  cursor:pointer;
  transition:background .15s;
}

/* divider between +/– */
.stepper .step:first-child{
  border-bottom:1px solid var(--accent);
}

.stepper .step:hover{
  background: var(--surface-hover);
}

.stepper .step:active{
  background: var(--surface-active);
}


/* --- Custom boolean input --- */
.bool-toggle{
  display:inline-flex;         /* centre the single glyph */
  align-items:center;
  justify-content:center;

  width:100%;
  padding:.45em .8em;

  font:inherit;
  border:1px solid var(--accent);
  border-radius:8px;
  box-sizing:border-box;
  background:var(--surface);
  color:var(--accent);
  cursor:pointer;
  transition:background .15s, color .15s;
}

.bool-toggle[data-value="true"]{
  background:var(--accent);
  color:var(--btn-text);
}


/* --- Mini-card for every test --- */
.test-item{
  border:1px solid var(--accent);
  border-radius:12px;
  padding:1em 1.2em;
  margin:.8em 0;

  display:flex;
  flex-wrap:wrap;
  gap:1em 1.4em;                 /* row  / column gap          */
  position:relative;
  background:var(--surface-accented);
}

/* one small “form-field” per value */
.test-item .test-field{
  flex: 1 1 var(--basis,18ch);  /* start narrow, may shrink to basis */
  min-inline-size: var(--basis,18ch);
  display:flex;
  flex-direction:column;
  gap:.25em;
}
/* type-specific overrides */
.bool-field   { --basis: 7ch;  flex-grow: 1 !important; }
.number-field { --basis: 12ch;  flex-grow: 5 !important; }
.string-field { --basis: 18ch;  flex-grow: 10 !important; }
.number-field input{
  min-inline-size: 7ch !important;
  flex: 1 1 7ch !important;
}

.test-item label{
  font-size:.75rem;
  font-weight:600;
  color:var(--text-muted);
  line-height:1.2;
}

.test-item input,
.test-item textarea{
  line-height:1;
  padding:.45em .8em;
  font:inherit;
  background:var(--surface);
  border:1px solid var(--accent);
  border-radius:8px;
}

/* only the actions bar inside each test card */
.test-item .item-actions{
  flex: 1 1 100%;
  justify-content: flex-end;
  margin-top: .5em;
}

/* keep handle + delete compact */
.test-item .drag-handle,
.test-item .delete-icon{font-size:1.2em;}
.test-field.full-row{ flex:1 1 100%; }


/* ———————————————————————————————————
   control bar that always looks the same
   ——————————————————————————————————— */
.item-actions{
  display:inline-flex;
  gap:.25em;
  align-items:center;
  flex-shrink:0;          /* never steal space from inputs */
}

/* minimal reset for the two controls */
.del-btn,
.drag-handle{
  display:inline-flex;
  align-items:center;
  justify-content:center;
  margin: 0;
  padding:0;
  gap:0;
}
.del-btn {
  background: none;
  border: none;
  color: #a22;
  cursor: pointer;
}
.delete-icon {
  font-size: 1.1em;
  padding: .3em;
  gap: 0;

  justify-content: center;
  align-items:center;       /* vertical-centre img + text */
}
.drag-handle {
  cursor: grab;
  opacity: 0.4;
  margin: 0;

  font-size: 1.1em;
}


.arg-item, .test-item {
  display: flex;
  align-items: center;
  justify-content: center;

  gap: .3em;
  margin: .5em 0;
}
/* allow each input to shrink below its intrinsic length */
.arg-item input{ min-width:0; }

/* --- Width ratio: name 2× type --- */
.name-input{ flex:2 1 0; }    /* 2 parts of the leftover width  */
.type-input{ flex:1 1 0; }    /* 1 part                        */

/* min widths so they don’t collapse completely      */
.name-input{ min-inline-size:8ch; }
.type-input{ min-inline-size:6ch; }

/* shared with inputs / textarea */
select{
  --border: var(--accent);
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: 8px;
  padding: .55em 2.0em .55em .9em;   /* ⟵ bigger right-padding */
  font: inherit;
  color: var(--text);
  transition: border-color .15s, box-shadow .15s;
  box-sizing: border-box;

  /* remove the native arrow, we’ll add our own */
  -webkit-appearance: none;   /* Safari/Chrome */
  -moz-appearance: none;      /* Firefox */
  appearance: none;

  /* custom SVG arrow so we fully control size / colour */
  background-image:
    url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23232730' d='M7 10l5 5 5-5'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right .3em center;
  background-size: 1.25em;
}

/* dark theme swaps arrow colour */
[data-theme="dark"] select{
  background-image:
    url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23efefef' viewBox='0 0 24 24'%3E%3Cpath d='M7 10l5 5 5-5z'/%3E%3C/svg%3E");
}



.add-btn {
  @extend %btn-base;
  margin: .3em 0;
  background: var(--surface);
  border: 1px solid var(--accent);
  color: var(--accent);
  border-radius: 2em;
  cursor: pointer;

  display:inline-flex;      /* flex, but on a single line */
  flex-direction:row;       /* default, but explicit */
  align-items:center;       /* vertical-centre img + text */
  justify-content: center;
  padding:.45em 1.1em;
}

.submit-btn {
  @extend %btn-base;
  background: var(--accent);
  color: var(--btn-text);
  padding: .5em 2em;
  cursor: pointer;
  border-radius: 2em;
  border: none;

  display:inline-flex;      /* flex, but on a single line */
  flex-direction:row;       /* default, but explicit */
  align-items:center;       /* vertical-centre img + text */
}

.submit-btn-icon {
  @extend .btn-icon;
  height:1.3em;
  width:1.3em;
  font-size:1.3em;  /* for some reason this makes the size better */

  /* — Layout — */
  flex-shrink:0;        /* prevents icon from shrinking in flex buttons */
  display:inline-block; /* ensures the width/height actually apply      */
  vertical-align:middle;
  margin-right: .5em;

  /* — Render quality + clean look — */
  object-fit:contain;   /* avoid distortion for non-SVG images */
  box-shadow:none !important;   /* nuke any inherited shadows */
  filter:none !important;       /* avoid unexpected drop-shadows */
}

.visually-hidden {
  position:absolute;
  width:1px; height:1px;
  padding:0; margin:-1px;
  overflow:hidden;
  clip:rect(0 0 0 0); border:0;
}

.auto-grow{
  /* keep the browser from adding scrollbars while we grow */
  overflow-y:hidden;
  /* user cannot drag the corner */
  resize:none;
  transition: 0.1s linear;
}


/* ---------- generic IO blocks ---------- */
.io-block {
  display: flex;
  flex-direction: column;
  gap: .35em;
  margin-bottom: 1rem;
}

.io-label {
  font-size:.75rem;
  font-weight:600;
  color:var(--text-muted);
  line-height:1.2;
}

.io-surface {
  font: 0.9rem/1.4 var(--font-mono, ui-monospace, "SF Mono", Menlo, monospace);
  background: var(--surface);
  border: 1px solid var(--accent-disabled);
  padding: .75em 1em;
  border-radius: .5rem;

  /* ─── keep original line-breaks but never wrap horizontally ─── */
  white-space: pre;         /* preserve \n, no soft wrapping          */
  overflow-x: auto;         /* add a horizontal scrollbar if too wide */
  max-width: 100%;          /* don’t blow past the layout on mobiles  */
}

/* --- Mini card style for test examples --- */
.example-card{
  border: 1px solid var(--accent);
  border-radius: 12px;
  padding: 1em;
  margin: .5em 0;

  display: flex;
  flex-direction: column;   /* stack inner .io-block sections  */
  gap: 0;                 /* vertical spacing between blocks */
  background: var(--surface-accented);
}

.action-row{
  display:flex;
  justify-content:space-between;
  align-items:center;
  margin-top:2em;
}


button:hover{
  opacity:.8;
}

