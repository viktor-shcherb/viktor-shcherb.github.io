name: PR preview
on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

# needed so the action can push the preview to gh-pages and add comments
permissions:
  contents: write
  pull-requests: write

concurrency: preview-${{ github.ref }}

jobs:
  build-and-preview:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'   # skip the Jekyll build on PR close
    steps:
      - uses: actions/checkout@v4

      # ------------------------------------------------------------------
      # 1 Build static site the same way GitHub Pages does
      # ------------------------------------------------------------------
      - name: Configure Pages
        uses: actions/configure-pages@v5          # sets up Ruby & Bundler cache
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1       # outputs to ./_site
      # ------------------------------------------------------------------
      # 2 Deploy preview under pr-preview/pr-<num>/ on gh-pages
      # ------------------------------------------------------------------
      - name: Deploy PR preview
        id: preview
        uses: rossjrw/pr-preview-action@v1
        with:
          source-dir: ./_site
          comment: true          # leaves a PR comment with the link
      # expose the URL to the next job
    outputs:
      preview_url: ${{ steps.preview.outputs.preview-url }}

  lighthouse:
    needs: build-and-preview
    runs-on: ubuntu-latest
    steps:
      - name: Lighthouse audit + PR comment
        uses: foo-software/lighthouse-check-action@master
        with:
          urls: |
            ${{ needs.build-and-preview.outputs.preview_url }}
          uploadArtifacts: true          # keep HTML reports
          temporaryPublicStorage: true   # get shareable links
          outputHtmlPath: ./lh-report        # saved as workflow artifact
          commentResults: true               # default; writes “lighthouse-bot” comment
